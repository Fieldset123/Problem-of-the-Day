class Solution {
public:
    int maxFreeTime(int eventTime, int k, vector<int>& startTime, vector<int>& endTime) {
        int n=startTime.size();
        vector<int>freespace(n+1,0);
        int prev=0;
        for(int i=0;i<=n;i++){
            if(i==n){
              freespace[i]=eventTime-prev;
              continue;  
            }
            freespace[i]=startTime[i]-prev;
            prev=endTime[i];
        }

        int max_sum=0;
        int i=0;
        int j=0;
        int curr_sum=0;
        while(j<=n){
            curr_sum+=freespace[j];
            while(j-i+1>k+1 &&i<=n){
                curr_sum-=freespace[i];
                i++;
            }
            max_sum=max(max_sum,curr_sum);
            j++;
        }

        return max_sum;

    }
};
